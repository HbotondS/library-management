const fs = require('fs');

const addresses = ['5 Brabant Close, Whiteley', 'Chapel Cottage, Chapel Street, Warham', '13 Elizabeth Close, Grimsby', '4 Silvester Road, Castor', 'Maes-Yr-Haf, Bryn Siriol, Fishguard', '4 Eamer Crescent, Wokingham', '16 Heneage Road, Grimsby', '40 Hallfields, Edwalton', '2 Welton Old Road, Welton', '690 Longmoor Lane, Liverpool', '10 Hen Felin, Gellinudd', '2 Edney Close, Church Crookham', '11 Greenslade Road, Dudley', '3 Chapel Cottages, Eynsford Road, Crockenhill', '4 Longmeade, Gravesend', '64 Queen Street, Millom', '11 Copres Avenue, Huddersfield', '7 Pastures Green, Patrick Brompton', '142 Cornwall Road, London', 'Flat 3, Oakmore Court, 22 Westfield Avenue, Hayling Island', '12 Griffiths Avenue, Lancing', 'Oak Cottage, Broomfields, South Chailey', '6 School Lane, Coed Talon', '22 Oakapple Road, Southwick', '14 Barnfield Close, Sheffield', '14 Pembroke Close, Mildenhall', '1 Rowley Cottages, Little Weighton', '7 Vaindre Close, St Mellons', 'The Ark, Decoy Road, Ormesby', '2 Shrewsbury Close, Walsall', '43 Magnolia Drive, Biggin Hill', '16 South Close, Greatworth', '23 Siddows Avenue, Clitheroe', '3B High Street, Emsworth', '30 Cray Road, Sidcup', '14 Yeovil Road, Montacute', '22 Park Road, Hale', 'Twinley House, Twinley Lane, Cole Henley', '7 Lea View, Willenhall', 'Bryn Glas, Marianglas', 'Sunbeams, Bayview Road, Whitstable', '24 The Oval, Sutton-In-Ashfield', '24 Moorfield Road, Widnes', '40 Mountside Road, Par', '10 Mulberry Road, Farsley', '2 Fronddu, Cwrtnewydd', '164 Brampton Road, Bexleyheath', '57 Century Tower, Dollery Drive, Birmingham', 'Riverside Cottage, Potter Lane, Samlesbury', 'Flat 3, Whyke Court, Chidham Close, Havant', '81 Kenton Avenue, Sunbury-On-Thames', '5 Bridge Terrace, Tuckenhay', 'First Floor, 3 - 4 The Quay, St Mawes', '19 Albert Terrace, Shipley', '37 Ridgway Avenue, Darfield', 'Thames House, Hartwell Street, London', '12 Monmouth Drive, Verwood', '103 Cranford Lane, Hounslow', 'Higher Prospidnick Cottage, Nancegollan', 'High Lea Cottage, Church Street, Tideswell', '20 Collington Rise, Bexhill-On-Sea', 'Higher Northwood, Inwardleigh', 
            '70 Promenade Gardens, Liverpool', '165 Alfreton Road, Nottingham', '23 Lodore Road, Bradford', '10 Whisby Court, Holton Le Clay', '19 The Oval, North Anston', '31 Hawthorn Road, Wylde Green', '1 - 5 Lowndes Square, London', '5 Dean & Chapter Cottages, Red Street, Southfleet', 'The Red Lion Public House, Eldon Street, London', '96A Langham Crescent, Billericay', 'Honeysuckle Cottage, Hartley Road, Cranbrook', '15 Valentine Way, Chalfont St Giles', 'Flat 19, Corsica Hall, College Road, Seaford', 'Flat 22, Cedar Park, Granville Way, Sherborne', '10 Warnsham Close, Lower Earley', '6 Sychbant Avenue, Maesteg', '5 Crossley Hall Mews, Bradford', '9 Hermitage Close, London', '13 Kemsley Road, Felixstowe', 'Tithe Barn, Magor', '8 The Terrace, Harrowbarrow', '37 Belle Vue, Morda', '51 Derwent Crescent, Hamsterley Colliery', '81 Swanside Road, Liverpool', 'Greenways, Birklands Lane, St. Albans', '6 Ellerton Road, Birmingham', '15 Yarbury Way, Weston-Super-Mare', '8 Sandford Way, Tuffley', '42 Trescobeas Road, Falmouth', '22 Oakwood Grove, Alderbury', '38 Litchard Cross, Bridgend', '1 Grange Avenue, Hartlepool', '38 Laurel Road, Hampton Hill', 'Flat 9, 271 Wordsworth Road, Bristol', '8 Ullswater Drive, Hethersett', '57 High Street, Walthamstow', '4 Pen Dinas, Tonypandy', '1 Towers Court, Pole Hill Road, Uxbridge'];
const phoneNumbers = ['(307) 312-1282', '(331) 384-5880', '(408) 154-3110', '(380) 873-1070', '(724) 623-9295', '(608) 404-9081', '(613) 874-1453', '(860) 293-0784', '(438) 266-3133', '(361) 238-3836', '(854) 115-7879', '(228) 558-6800', '(405) 488-4523', '(820) 665-3951', '(706) 724-8722', '(928) 401-7293', '(559) 257-6127', '(210) 419-5907', '(409) 611-5333', '(516) 078-0841', '(516) 743-8499', '(571) 780-4470', '(660) 769-3872', '(515) 334-2350', '(509) 904-5415', '(662) 088-4709', '(737) 750-5126', '(580) 503-9592', '(850) 531-8279', '(228) 427-7811', '(319) 486-8452', '(336) 887-5525', '(702) 068-4021', '(512) 466-8311', '(605) 179-6445', '(231) 730-1451', '(737) 408-7685', '(928) 616-9707', '(430) 271-1953', '(318) 492-7916', '(302) 131-9274', '(787) 534-7742', '(580) 860-1279', '(307) 442-7847', '(831) 057-2732', '(914) 597-9824', '(870) 749-1381', '(848) 431-6068', '(952) 867-0756', '(787) 625-2110', '(813) 914-8039', '(503) 216-3340', '(484) 827-6749', '(818) 563-0273', '(567) 061-7429', '(801) 219-5554', '(917) 050-2679', '(973) 280-8852', '(929) 999-6715', '(929) 618-2210', '(740) 172-4648', '(847) 313-6376', '(785) 466-5970', '(912) 462-1993', '(670) 347-5765', '(416) 059-3647', '(478) 183-3843', '(313) 719-9652', '(346) 422-6987', '(727) 718-0999', '(859) 949-2642', '(579) 362-9934', '(616) 291-0557', '(220) 403-2909', '(209) 100-9878', '(575) 552-0055', '(406) 712-1541', '(315) 339-4584', '(214) 740-6635', '(252) 460-5038', '(763) 945-4786', '(612) 672-1168', '(272) 379-9153', '(715) 973-4161', '(406) 437-9906', '(306) 598-0954', '(847) 942-3895', '(802) 558-5090', '(913) 018-2192', '(319) 082-9844', '(732) 881-7131', '(610) 622-0000', '(782) 331-1041', '(585) 422-4482', '(734) 162-4575', '(801) 809-9065', '(716) 204-6766', '(386) 493-2546', '(320) 706-5493', '(308) 423-9936', '(314) 230-8567', '(919) 224-7893', '(567) 663-8918', '(239) 229-8475', '(334) 223-0793', '(604) 242-7081', '(703) 004-9691', '(708) 031-1138', '(308) 757-7811', '(513) 991-0202', '(705) 131-9263', '(503) 876-1172', '(760) 049-6676', '(669) 603-6305', '(978) 512-5541', '(249) 693-9369'];            

const mongodbURL = 'mongodb://localhost:60000/library-management';

randomFrom = (array) => array[Math.floor(Math.random() * array.length)];

progress = (value, range) => {
  process.stdout.clearLine();
  process.stdout.cursorTo(0);
  process.stdout.write(`${value}/${range}`);
};

readJson = (jsonPath) => JSON.parse(fs.readFileSync(jsonPath));

createSuccessful = (tableName) => console.log(`${tableName} collection is created successfully.`);

insertSuccessful = (tableName) => console.log(`Insert into ${tableName} was successful.`);

module.exports = {
  addresses, 
  phoneNumbers, 
  randomFrom, 
  progress, 
  mongodbURL, 
  readJson, 
  createSuccessful, 
  insertSuccessful
};    